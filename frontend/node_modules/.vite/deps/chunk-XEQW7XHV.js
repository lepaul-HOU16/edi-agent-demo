import {
  getAnalyticsLabelAttribute,
  getAnalyticsMetadataAttribute,
  useUniqueId
} from "./chunk-UO4K3KY5.js";
import {
  clsx_m_default
} from "./chunk-TACQRHRS.js";
import {
  __rest
} from "./chunk-FA3WS4TG.js";
import {
  require_react
} from "./chunk-NNXGX6WR.js";
import {
  __toESM
} from "./chunk-WOOG5QLI.js";

// ../node_modules/@cloudscape-design/components/internal/components/abstract-switch/index.js
var import_react = __toESM(require_react());

// ../node_modules/@cloudscape-design/components/internal/components/abstract-switch/analytics-metadata/styles.css.js
import "/Users/cmgabri/Desktop/osdu-decoupled/frontend-uxpin/node_modules/@cloudscape-design/components/internal/components/abstract-switch/analytics-metadata/styles.scoped.css";
var styles_css_default = {
  "label": "awsui_label_13tpe_9w8pd_5",
  "native-input": "awsui_native-input_13tpe_9w8pd_6"
};

// ../node_modules/@cloudscape-design/components/internal/components/abstract-switch/styles.css.js
import "/Users/cmgabri/Desktop/osdu-decoupled/frontend-uxpin/node_modules/@cloudscape-design/components/internal/components/abstract-switch/styles.scoped.css";
var styles_css_default2 = {
  "content": "awsui_content_1wepg_1qvhh_145",
  "description": "awsui_description_1wepg_1qvhh_146",
  "label": "awsui_label_1wepg_1qvhh_147",
  "outline": "awsui_outline_1wepg_1qvhh_155",
  "show-outline": "awsui_show-outline_1wepg_1qvhh_158",
  "native-input": "awsui_native-input_1wepg_1qvhh_162",
  "wrapper": "awsui_wrapper_1wepg_1qvhh_166",
  "label-wrapper": "awsui_label-wrapper_1wepg_1qvhh_172",
  "empty-content": "awsui_empty-content_1wepg_1qvhh_183",
  "description-bottom-padding": "awsui_description-bottom-padding_1wepg_1qvhh_193",
  "label-disabled": "awsui_label-disabled_1wepg_1qvhh_201",
  "description-disabled": "awsui_description-disabled_1wepg_1qvhh_202",
  "control": "awsui_control_1wepg_1qvhh_206"
};

// ../node_modules/@cloudscape-design/components/internal/components/abstract-switch/index.js
function joinString(values) {
  return values.filter((value) => !!value).join(" ");
}
function AbstractSwitch(_a) {
  var { controlId, controlClassName, outlineClassName, showOutline, disabled, readOnly, nativeControl, styledControl, label, description, descriptionBottomPadding, ariaLabel, ariaLabelledby, ariaDescribedby, ariaControls, onClick, __internalRootRef } = _a, rest = __rest(_a, ["controlId", "controlClassName", "outlineClassName", "showOutline", "disabled", "readOnly", "nativeControl", "styledControl", "label", "description", "descriptionBottomPadding", "ariaLabel", "ariaLabelledby", "ariaDescribedby", "ariaControls", "onClick", "__internalRootRef"]);
  const uniqueId = useUniqueId();
  const id = controlId || uniqueId;
  const labelId = `${id}-label`;
  const descriptionId = `${id}-description`;
  const ariaLabelledByIds = [];
  if (label && !ariaLabel) {
    ariaLabelledByIds.push(labelId);
  }
  if (ariaLabelledby) {
    ariaLabelledByIds.push(ariaLabelledby);
  }
  const ariaDescriptions = [];
  if (ariaDescribedby) {
    ariaDescriptions.push(ariaDescribedby);
  }
  if (description) {
    ariaDescriptions.push(descriptionId);
  }
  return import_react.default.createElement(
    "span",
    Object.assign({}, rest, { className: clsx_m_default(styles_css_default2.wrapper, rest.className), ref: __internalRootRef }, getAnalyticsLabelAttribute(label ? `.${styles_css_default.label}` : `.${styles_css_default["native-input"]}`)),
    import_react.default.createElement(
      "span",
      Object.assign({ className: styles_css_default2["label-wrapper"], "aria-disabled": disabled ? "true" : void 0, onClick: disabled || readOnly ? void 0 : onClick }, getAnalyticsMetadataAttribute(disabled || readOnly ? {} : {
        action: "select",
        detail: {
          label: label ? `.${styles_css_default.label}` : `.${styles_css_default["native-input"]}`
        }
      })),
      import_react.default.createElement(
        "span",
        { className: clsx_m_default(styles_css_default2.control, controlClassName) },
        styledControl,
        nativeControl({
          id,
          disabled,
          className: clsx_m_default(styles_css_default2["native-input"], styles_css_default["native-input"]),
          "aria-describedby": ariaDescriptions.length ? joinString(ariaDescriptions) : void 0,
          "aria-labelledby": ariaLabelledByIds.length ? joinString(ariaLabelledByIds) : void 0,
          "aria-label": ariaLabel,
          "aria-controls": ariaControls
        }),
        import_react.default.createElement("span", { className: clsx_m_default(styles_css_default2.outline, outlineClassName, showOutline && styles_css_default2["show-outline"]) })
      ),
      import_react.default.createElement(
        "span",
        { className: clsx_m_default(styles_css_default2.content, !label && !description && styles_css_default2["empty-content"]) },
        label && import_react.default.createElement("span", { id: labelId, className: clsx_m_default(styles_css_default2.label, styles_css_default.label, { [styles_css_default2["label-disabled"]]: disabled }) }, label),
        description && import_react.default.createElement("span", { id: descriptionId, className: clsx_m_default(styles_css_default2.description, {
          [styles_css_default2["description-disabled"]]: disabled,
          [styles_css_default2["description-bottom-padding"]]: descriptionBottomPadding
        }) }, description)
      )
    )
  );
}

export {
  AbstractSwitch
};
//# sourceMappingURL=chunk-XEQW7XHV.js.map
