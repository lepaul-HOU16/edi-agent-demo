{
  "version": 3,
  "sources": ["../../../../node_modules/src/prompt-input/index.tsx", "../../../../node_modules/src/prompt-input/internal.tsx", "../../../../node_modules/@cloudscape-design/components/prompt-input/styles.css.js", "../../../../node_modules/@cloudscape-design/components/prompt-input/test-classes/styles.css.js"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { PromptInputProps } from './interfaces';\nimport InternalPromptInput from './internal';\n\nexport { PromptInputProps };\n\nconst PromptInput = React.forwardRef(\n  (\n    {\n      autoComplete,\n      autoFocus,\n      disableBrowserAutocorrect,\n      disableActionButton,\n      spellcheck,\n      readOnly,\n      actionButtonIconName,\n      minRows = 1,\n      maxRows = 3,\n      ...props\n    }: PromptInputProps,\n    ref: React.Ref<PromptInputProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('PromptInput', {\n      props: {\n        readOnly,\n        autoComplete,\n        autoFocus,\n        disableBrowserAutocorrect,\n        disableActionButton,\n        spellcheck,\n        actionButtonIconName,\n        minRows,\n        maxRows,\n      },\n    });\n    return (\n      <InternalPromptInput\n        readOnly={readOnly}\n        autoComplete={autoComplete}\n        autoFocus={autoFocus}\n        disableBrowserAutocorrect={disableBrowserAutocorrect}\n        disableActionButton={disableActionButton}\n        spellcheck={spellcheck}\n        actionButtonIconName={actionButtonIconName}\n        minRows={minRows}\n        maxRows={maxRows}\n        {...props}\n        {...baseComponentProps}\n        ref={ref}\n      />\n    );\n  }\n);\napplyDisplayName(PromptInput, 'PromptInput');\nexport default PromptInput;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { Ref, useCallback, useEffect, useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useDensityMode } from '@cloudscape-design/component-toolkit/internal';\n\nimport InternalButton from '../button/internal';\nimport { convertAutoComplete } from '../input/utils';\nimport { getBaseProps } from '../internal/base-component';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { fireKeyboardEvent, fireNonCancelableEvent } from '../internal/events';\nimport * as tokens from '../internal/generated/styles/tokens';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { SomeRequired } from '../internal/types';\nimport { PromptInputProps } from './interfaces';\n\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\n\ninterface InternalPromptInputProps\n  extends SomeRequired<PromptInputProps, 'maxRows' | 'minRows'>,\n    InternalBaseComponentProps {}\n\nconst InternalPromptInput = React.forwardRef(\n  (\n    {\n      value,\n      actionButtonAriaLabel,\n      actionButtonIconName,\n      actionButtonIconUrl,\n      actionButtonIconSvg,\n      actionButtonIconAlt,\n      ariaLabel,\n      autoComplete,\n      autoFocus,\n      disableActionButton,\n      disableBrowserAutocorrect,\n      disabled,\n      maxRows,\n      minRows,\n      name,\n      onAction,\n      onBlur,\n      onChange,\n      onFocus,\n      onKeyDown,\n      onKeyUp,\n      placeholder,\n      readOnly,\n      spellcheck,\n      secondaryActions,\n      secondaryContent,\n      disableSecondaryActionsPaddings,\n      disableSecondaryContentPaddings,\n      __internalRootRef = null,\n      ...rest\n    }: InternalPromptInputProps,\n    ref: Ref<PromptInputProps.Ref>\n  ) => {\n    const { ariaLabelledby, ariaDescribedby, controlId, invalid, warning } = useFormFieldContext(rest);\n\n    const baseProps = getBaseProps(rest);\n\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n    const isRefresh = useVisualRefresh();\n    const isCompactMode = useDensityMode(textareaRef) === 'compact';\n\n    const PADDING = isRefresh ? tokens.spaceXxs : tokens.spaceXxxs;\n    const LINE_HEIGHT = tokens.lineHeightBodyM;\n    const DEFAULT_MAX_ROWS = 3;\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        focus(...args: Parameters<HTMLElement['focus']>) {\n          textareaRef.current?.focus(...args);\n        },\n        select() {\n          textareaRef.current?.select();\n        },\n        setSelectionRange(...args: Parameters<HTMLTextAreaElement['setSelectionRange']>) {\n          textareaRef.current?.setSelectionRange(...args);\n        },\n      }),\n      [textareaRef]\n    );\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n      fireKeyboardEvent(onKeyDown, event);\n\n      if (event.key === 'Enter' && !event.shiftKey) {\n        if ('form' in event.target && event.target.form !== null && !event.isDefaultPrevented()) {\n          (event.target.form as HTMLFormElement).requestSubmit();\n        }\n\n        event.preventDefault();\n        fireNonCancelableEvent(onAction, { value });\n      }\n    };\n\n    const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n      fireNonCancelableEvent(onChange, { value: event.target.value });\n      adjustTextareaHeight();\n    };\n\n    const hasActionButton = actionButtonIconName || actionButtonIconSvg || actionButtonIconUrl;\n\n    const adjustTextareaHeight = useCallback(() => {\n      if (textareaRef.current) {\n        // this is required so the scrollHeight becomes dynamic, otherwise it will be locked at the highest value for the size it reached e.g. 500px\n        textareaRef.current.style.height = 'auto';\n\n        const minTextareaHeight = `calc(${LINE_HEIGHT} +  ${tokens.spaceScaledXxs} * 2)`; // the min height of Textarea with 1 row\n\n        if (maxRows === -1) {\n          const scrollHeight = `calc(${textareaRef.current.scrollHeight}px)`;\n          textareaRef.current.style.height = `max(${scrollHeight}, ${minTextareaHeight})`;\n        } else {\n          const maxRowsHeight = `calc(${maxRows <= 0 ? DEFAULT_MAX_ROWS : maxRows} * (${LINE_HEIGHT} + ${PADDING} / 2) + ${PADDING})`;\n          const scrollHeight = `calc(${textareaRef.current.scrollHeight}px)`;\n          textareaRef.current.style.height = `min(max(${scrollHeight}, ${minTextareaHeight}), ${maxRowsHeight})`;\n        }\n      }\n    }, [maxRows, LINE_HEIGHT, PADDING]);\n\n    useEffect(() => {\n      const handleResize = () => {\n        adjustTextareaHeight();\n      };\n\n      window.addEventListener('resize', handleResize);\n\n      return () => {\n        window.removeEventListener('resize', handleResize);\n      };\n    }, [adjustTextareaHeight]);\n\n    useEffect(() => {\n      adjustTextareaHeight();\n    }, [value, adjustTextareaHeight, maxRows, isCompactMode]);\n\n    const attributes: React.TextareaHTMLAttributes<HTMLTextAreaElement> = {\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledby,\n      'aria-describedby': ariaDescribedby,\n      'aria-invalid': invalid ? 'true' : undefined,\n      name,\n      placeholder,\n      autoFocus,\n      className: clsx(styles.textarea, testutilStyles.textarea, {\n        [styles.invalid]: invalid,\n        [styles.warning]: warning,\n      }),\n      autoComplete: convertAutoComplete(autoComplete),\n      spellCheck: spellcheck,\n      disabled,\n      readOnly: readOnly ? true : undefined,\n      rows: minRows,\n      onKeyDown: handleKeyDown,\n      onKeyUp: onKeyUp && (event => fireKeyboardEvent(onKeyUp, event)),\n      // We set a default value on the component in order to force it into the controlled mode.\n      value: value || '',\n      onChange: handleChange,\n      onBlur: onBlur && (() => fireNonCancelableEvent(onBlur)),\n      onFocus: onFocus && (() => fireNonCancelableEvent(onFocus)),\n    };\n\n    if (disableBrowserAutocorrect) {\n      attributes.autoCorrect = 'off';\n      attributes.autoCapitalize = 'off';\n    }\n\n    const action = (\n      <div className={styles.button}>\n        <InternalButton\n          className={clsx(styles['action-button'], testutilStyles['action-button'])}\n          ariaLabel={actionButtonAriaLabel}\n          disabled={disabled || readOnly || disableActionButton}\n          __focusable={readOnly}\n          iconName={actionButtonIconName}\n          iconUrl={actionButtonIconUrl}\n          iconSvg={actionButtonIconSvg}\n          iconAlt={actionButtonIconAlt}\n          onClick={() => fireNonCancelableEvent(onAction, { value })}\n          variant=\"icon\"\n        />\n      </div>\n    );\n\n    return (\n      <div\n        {...baseProps}\n        aria-label={ariaLabel}\n        className={clsx(styles.root, testutilStyles.root, baseProps.className, {\n          [styles['textarea-readonly']]: readOnly,\n          [styles['textarea-invalid']]: invalid,\n          [styles['textarea-warning']]: warning && !invalid,\n          [styles.disabled]: disabled,\n        })}\n        ref={__internalRootRef}\n        role=\"region\"\n      >\n        {secondaryContent && (\n          <div\n            className={clsx(styles['secondary-content'], testutilStyles['secondary-content'], {\n              [styles['with-paddings']]: !disableSecondaryContentPaddings,\n              [styles.invalid]: invalid,\n              [styles.warning]: warning,\n            })}\n          >\n            {secondaryContent}\n          </div>\n        )}\n        <div className={styles['textarea-wrapper']}>\n          <textarea ref={textareaRef} id={controlId} {...attributes} />\n          {hasActionButton && !secondaryActions && action}\n        </div>\n        {secondaryActions && (\n          <div\n            className={clsx(styles['secondary-actions'], testutilStyles['secondary-actions'], {\n              [styles['with-paddings']]: !disableSecondaryActionsPaddings,\n              [styles.invalid]: invalid,\n              [styles.warning]: warning,\n            })}\n          >\n            {secondaryActions}\n            <div className={styles.buffer} onClick={() => textareaRef.current?.focus()} />\n            {hasActionButton && action}\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default InternalPromptInput;\n", "\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_55fkh_14pjo_146\",\n  \"textarea-readonly\": \"awsui_textarea-readonly_55fkh_14pjo_185\",\n  \"disabled\": \"awsui_disabled_55fkh_14pjo_190\",\n  \"textarea-invalid\": \"awsui_textarea-invalid_55fkh_14pjo_198\",\n  \"textarea-warning\": \"awsui_textarea-warning_55fkh_14pjo_223\",\n  \"textarea\": \"awsui_textarea_55fkh_14pjo_185\",\n  \"invalid\": \"awsui_invalid_55fkh_14pjo_323\",\n  \"warning\": \"awsui_warning_55fkh_14pjo_323\",\n  \"textarea-wrapper\": \"awsui_textarea-wrapper_55fkh_14pjo_342\",\n  \"button\": \"awsui_button_55fkh_14pjo_346\",\n  \"action-button\": \"awsui_action-button_55fkh_14pjo_351\",\n  \"secondary-content\": \"awsui_secondary-content_55fkh_14pjo_376\",\n  \"with-paddings\": \"awsui_with-paddings_55fkh_14pjo_411\",\n  \"secondary-actions\": \"awsui_secondary-actions_55fkh_14pjo_421\",\n  \"buffer\": \"awsui_buffer_55fkh_14pjo_474\"\n};\n  ", "\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_nr3gs_n93je_5\",\n  \"textarea\": \"awsui_textarea_nr3gs_n93je_9\",\n  \"action-button\": \"awsui_action-button_nr3gs_n93je_13\",\n  \"secondary-actions\": \"awsui_secondary-actions_nr3gs_n93je_17\",\n  \"secondary-content\": \"awsui_secondary-content_nr3gs_n93je_21\"\n};\n  "],
  "mappings": "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",
  "names": ["import_react", "styles_css_default", "React", "_a", "styles_css_default", "internal_default", "React", "internal_default"]
}
