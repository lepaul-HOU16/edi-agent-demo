{
  "version": 3,
  "sources": ["../../../../node_modules/src/internal/hooks/container-queries/use-container-breakpoints.ts"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\n\nimport { Breakpoint, getMatchingBreakpoint } from '../../breakpoints';\n\n/**\n * Re-renders the component when the breakpoint for the component changes. Scopes the re-renders to the specific\n * breakpoints you want to break at. \"default\" is always included as a fallback, so [\"xs\"] would trigger for\n * \"default\" and \"xs\".\n *\n * @param triggers The relevant breakpoints to trigger for.\n */\nexport function useContainerBreakpoints<T extends readonly Breakpoint[], E extends Element = any>(triggers?: T) {\n  // triggers.join() gives us a stable value to use for the dependencies argument\n  const triggersDep = triggers?.join();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useContainerQuery(rect => getMatchingBreakpoint(rect.contentBoxWidth, triggers), [triggersDep]) as [\n    'default' | T[number] | null,\n    React.Ref<E>,\n  ];\n}\n"],
  "mappings": ";;;;;;;;AAeM,SAAU,wBAAkF,UAAY;AAE5G,QAAM,cAAc,aAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,KAAI;AAElC,SAAO,kBAAkB,UAAQ,sBAAsB,KAAK,iBAAiB,QAAQ,GAAG,CAAC,WAAW,CAAC;AAIvG;",
  "names": []
}
