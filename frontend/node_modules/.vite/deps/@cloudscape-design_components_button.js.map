{
  "version": 3,
  "sources": ["../../../../node_modules/src/button/index.tsx"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { getBaseProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { ButtonProps } from './interfaces';\nimport { InternalButton } from './internal';\n\nexport { ButtonProps };\n\nconst Button = React.forwardRef(\n  (\n    {\n      children,\n      iconName,\n      iconAlign = 'left',\n      iconUrl,\n      iconSvg,\n      iconAlt,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      disabledReason,\n      wrapText = true,\n      href,\n      target,\n      rel,\n      external = false,\n      download,\n      formAction = 'submit',\n      ariaLabel,\n      ariaDescribedby,\n      onClick,\n      onFollow,\n      ariaExpanded,\n      ariaControls,\n      fullWidth,\n      form,\n      i18nStrings,\n      ...props\n    }: ButtonProps,\n    ref: React.Ref<ButtonProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Button', {\n      props: { formAction, fullWidth, iconAlign, iconName, rel, target, external, variant, wrapText },\n      metadata: { hasDisabledReason: Boolean(disabledReason) },\n    });\n    const baseProps = getBaseProps(props);\n    return (\n      <InternalButton\n        {...baseProps}\n        {...baseComponentProps}\n        ref={ref}\n        iconName={iconName}\n        iconAlign={iconAlign}\n        iconUrl={iconUrl}\n        iconSvg={iconSvg}\n        iconAlt={iconAlt}\n        variant={variant}\n        loading={loading}\n        loadingText={loadingText}\n        disabled={disabled}\n        disabledReason={disabledReason}\n        wrapText={wrapText}\n        href={href}\n        target={target}\n        rel={rel}\n        external={external}\n        download={download}\n        formAction={formAction}\n        ariaLabel={ariaLabel}\n        ariaDescribedby={ariaDescribedby}\n        onClick={onClick}\n        onFollow={onFollow}\n        ariaExpanded={ariaExpanded}\n        ariaControls={ariaControls}\n        fullWidth={fullWidth}\n        form={form}\n        i18nStrings={i18nStrings}\n        __injectAnalyticsComponentMetadata={true}\n      >\n        {children}\n      </InternalButton>\n    );\n  }\n);\n\napplyDisplayName(Button, 'Button');\nexport default Button;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,mBAAkB;AAUlB,IAAM,SAAS,aAAAA,QAAM,WACnB,CACE,IA8BA,QACE;MA/BF,EACE,UACA,UACA,YAAY,QACZ,SACA,SACA,SACA,UAAU,UACV,UAAU,OACV,aACA,WAAW,OACX,gBACA,WAAW,MACX,MACA,QACA,KACA,WAAW,OACX,UACA,aAAa,UACb,WACA,iBACA,SACA,UACA,cACA,cACA,WACA,MACA,YAAW,IAAA,IACR,QAAK,OAAA,IA5BV,CAAA,YAAA,YAAA,aAAA,WAAA,WAAA,WAAA,WAAA,WAAA,eAAA,YAAA,kBAAA,YAAA,QAAA,UAAA,OAAA,YAAA,YAAA,cAAA,aAAA,mBAAA,WAAA,YAAA,gBAAA,gBAAA,aAAA,QAAA,aAAA,CA6BC;AAGD,QAAM,qBAAqB,iBAAiB,UAAU;IACpD,OAAO,EAAE,YAAY,WAAW,WAAW,UAAU,KAAK,QAAQ,UAAU,SAAS,SAAQ;IAC7F,UAAU,EAAE,mBAAmB,QAAQ,cAAc,EAAC;GACvD;AACD,QAAM,YAAY,aAAa,KAAK;AACpC,SACE,aAAAA,QAAA,cAAC,gBAAc,OAAA,OAAA,CAAA,GACT,WACA,oBAAkB,EACtB,KACA,UACA,WACA,SACA,SACA,SACA,SACA,SACA,aACA,UACA,gBACA,UACA,MACA,QACA,KACA,UACA,UACA,YACA,WACA,iBACA,SACA,UACA,cACA,cACA,WACA,MACA,aACA,oCAAoC,KAAI,CAAA,GAEvC,QAAQ;AAGf,CAAC;AAGH,iBAAiB,QAAQ,QAAQ;AACjC,IAAA,iBAAe;",
  "names": ["React"]
}
