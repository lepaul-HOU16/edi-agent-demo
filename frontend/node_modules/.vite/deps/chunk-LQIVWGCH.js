import {
  internal_default
} from "./chunk-DJZ6PCYE.js";
import {
  InfoLinkLabelContext,
  joinStrings
} from "./chunk-KCXCA4I5.js";
import {
  internal_default as internal_default2,
  internal_default2 as internal_default3,
  useInternalI18n
} from "./chunk-MPPGLDEP.js";
import {
  FormFieldContext,
  useFormFieldContext
} from "./chunk-X6YNYP2P.js";
import {
  DATA_ATTR_FIELD_ERROR,
  DATA_ATTR_FIELD_LABEL,
  FunnelMetrics,
  getFieldSlotSeletor,
  getSubStepAllSelector,
  getTextFromSelector,
  useFunnel,
  useFunnelStep,
  useFunnelSubStep
} from "./chunk-3YAZCWEI.js";
import {
  copyAnalyticsMetadataAttribute,
  useUniqueId
} from "./chunk-UO4K3KY5.js";
import {
  clsx_m_default,
  getBaseProps,
  useVisualRefresh,
  warnOnce
} from "./chunk-TACQRHRS.js";
import {
  __rest
} from "./chunk-FA3WS4TG.js";
import {
  require_react
} from "./chunk-NNXGX6WR.js";
import {
  __toESM
} from "./chunk-WOOG5QLI.js";

// ../node_modules/@cloudscape-design/components/form-field/analytics-metadata/styles.css.js
import "/Users/cmgabri/Desktop/osdu-decoupled/frontend-uxpin/node_modules/@cloudscape-design/components/form-field/analytics-metadata/styles.scoped.css";
var styles_css_default = {
  "label": "awsui_label_aqu00_ocied_5"
};

// ../node_modules/@cloudscape-design/components/form-field/internal.js
var import_react = __toESM(require_react());

// ../node_modules/@cloudscape-design/components/form-field/util.js
function makeSlotId(prop, formFieldId, propName) {
  if (!prop) {
    return void 0;
  }
  return `${formFieldId}-${propName}`;
}
function getSlotIds(formFieldId, label, description, constraintText, errorText, warningText) {
  const ids = {
    label: makeSlotId(label, formFieldId, "label"),
    description: makeSlotId(description, formFieldId, "description"),
    constraint: makeSlotId(constraintText, formFieldId, "constraint"),
    error: makeSlotId(errorText, formFieldId, "error"),
    warning: makeSlotId(warningText, formFieldId, "warning")
  };
  return ids;
}
function getAriaDescribedBy({ error, warning, description, constraint }) {
  const describedByAttributes = [error, warning, description, constraint].filter((e) => !!e);
  const describedBy = describedByAttributes.length ? describedByAttributes.join(" ") : void 0;
  return describedBy;
}
function getGridDefinition(stretch, secondaryControlPresent, isRefresh) {
  let columns;
  if (stretch) {
    columns = [{ colspan: 12 }, { colspan: 12 }];
  } else if (isRefresh) {
    columns = [{ colspan: { default: 12, xs: 8 } }, { colspan: { default: 12, xs: 4 } }];
  } else {
    columns = [{ colspan: { default: 12, xs: 9 } }, { colspan: { default: 12, xs: 3 } }];
  }
  if (!secondaryControlPresent) {
    return [columns[0]];
  }
  return columns;
}

// ../node_modules/@cloudscape-design/components/form-field/styles.css.js
import "/Users/cmgabri/Desktop/osdu-decoupled/frontend-uxpin/node_modules/@cloudscape-design/components/form-field/styles.scoped.css";
var styles_css_default2 = {
  "error-icon-shake-wrapper": "awsui_error-icon-shake-wrapper_14mhv_11w8y_153",
  "warning-icon-shake-wrapper": "awsui_warning-icon-shake-wrapper_14mhv_11w8y_154",
  "awsui-motion-shake-horizontally": "awsui_awsui-motion-shake-horizontally_14mhv_11w8y_1",
  "error-icon-scale-wrapper": "awsui_error-icon-scale-wrapper_14mhv_11w8y_184",
  "warning-icon-scale-wrapper": "awsui_warning-icon-scale-wrapper_14mhv_11w8y_185",
  "awsui-motion-scale-popup": "awsui_awsui-motion-scale-popup_14mhv_11w8y_1",
  "warning": "awsui_warning_14mhv_11w8y_154",
  "error": "awsui_error_14mhv_11w8y_153",
  "awsui-motion-fade-in-0": "awsui_awsui-motion-fade-in-0_14mhv_11w8y_1",
  "root": "awsui_root_14mhv_11w8y_236",
  "label": "awsui_label_14mhv_11w8y_269",
  "info": "awsui_info_14mhv_11w8y_285",
  "description": "awsui_description_14mhv_11w8y_291",
  "constraint": "awsui_constraint_14mhv_11w8y_292",
  "hints": "awsui_hints_14mhv_11w8y_299",
  "constraint-has-validation-text": "awsui_constraint-has-validation-text_14mhv_11w8y_300",
  "secondary-control": "awsui_secondary-control_14mhv_11w8y_304",
  "controls": "awsui_controls_14mhv_11w8y_308",
  "label-hidden": "awsui_label-hidden_14mhv_11w8y_308",
  "label-wrapper": "awsui_label-wrapper_14mhv_11w8y_311",
  "control": "awsui_control_14mhv_11w8y_308",
  "error__message": "awsui_error__message_14mhv_11w8y_338",
  "warning__message": "awsui_warning__message_14mhv_11w8y_339",
  "visually-hidden": "awsui_visually-hidden_14mhv_11w8y_343"
};

// ../node_modules/@cloudscape-design/components/form-field/internal.js
function FormFieldError({ id, children, errorIconAriaLabel }) {
  const i18n = useInternalI18n("form-field");
  const contentRef = (0, import_react.useRef)(null);
  const i18nErrorIconAriaLabel = i18n("i18nStrings.errorIconAriaLabel", errorIconAriaLabel);
  return import_react.default.createElement(
    import_react.default.Fragment,
    null,
    import_react.default.createElement(
      "div",
      { id, className: styles_css_default2.error },
      import_react.default.createElement(
        "div",
        { className: styles_css_default2["error-icon-shake-wrapper"] },
        import_react.default.createElement(
          "div",
          { className: styles_css_default2["error-icon-scale-wrapper"] },
          import_react.default.createElement(internal_default2, { name: "status-negative", size: "small", ariaLabel: i18nErrorIconAriaLabel })
        )
      ),
      import_react.default.createElement("span", { className: styles_css_default2.error__message, ref: contentRef }, children)
    ),
    import_react.default.createElement(internal_default3, { assertive: true, tagName: "span", sources: [i18nErrorIconAriaLabel, contentRef] })
  );
}
function FormFieldWarning({ id, children, warningIconAriaLabel }) {
  const i18n = useInternalI18n("form-field");
  const contentRef = (0, import_react.useRef)(null);
  const i18nWarningIconAriaLabel = i18n("i18nStrings.warningIconAriaLabel", warningIconAriaLabel);
  return import_react.default.createElement(
    import_react.default.Fragment,
    null,
    import_react.default.createElement(
      "div",
      { id, className: styles_css_default2.warning },
      import_react.default.createElement(
        "div",
        { className: styles_css_default2["warning-icon-shake-wrapper"] },
        import_react.default.createElement(
          "div",
          { className: styles_css_default2["warning-icon-scale-wrapper"] },
          import_react.default.createElement(internal_default2, { name: "status-warning", size: "small", ariaLabel: i18nWarningIconAriaLabel })
        )
      ),
      import_react.default.createElement("span", { className: styles_css_default2.warning__message, ref: contentRef }, children)
    ),
    import_react.default.createElement(internal_default3, { assertive: true, tagName: "span", sources: [i18nWarningIconAriaLabel, contentRef] })
  );
}
function ConstraintText({ id, hasValidationText, children }) {
  return import_react.default.createElement("div", { id, className: clsx_m_default(styles_css_default2.constraint, hasValidationText && styles_css_default2["constraint-has-validation-text"]) }, children);
}
function InternalFormField(_a) {
  var { controlId, stretch = false, label, info, i18nStrings, children, secondaryControl, description, constraintText, errorText, warningText, __hideLabel, __internalRootRef = null, __disableGutters = false, __analyticsMetadata = void 0, __style = {} } = _a, rest = __rest(_a, ["controlId", "stretch", "label", "info", "i18nStrings", "children", "secondaryControl", "description", "constraintText", "errorText", "warningText", "__hideLabel", "__internalRootRef", "__disableGutters", "__analyticsMetadata", "__style"]);
  const baseProps = getBaseProps(rest);
  const isRefresh = useVisualRefresh();
  const instanceUniqueId = useUniqueId("formField");
  const generatedControlId = controlId || instanceUniqueId;
  const formFieldId = controlId || generatedControlId;
  const { funnelIdentifier, funnelInteractionId, submissionAttempt, funnelState, errorCount } = useFunnel();
  const { stepIdentifier, stepNumber, stepNameSelector } = useFunnelStep();
  const { subStepErrorContext, subStepIdentifier, subStepSelector, subStepNameSelector } = useFunnelSubStep();
  const showWarning = warningText && !errorText;
  if (warningText && errorText) {
    warnOnce("FileUpload", "Both `errorText` and `warningText` exist. `warningText` will not be shown.");
  }
  const slotIds = getSlotIds(formFieldId, label, description, constraintText, errorText, showWarning ? warningText : void 0);
  const ariaDescribedBy = getAriaDescribedBy(slotIds);
  const gridDefinition = getGridDefinition(stretch, !!secondaryControl, isRefresh);
  const { ariaLabelledby: parentAriaLabelledby, ariaDescribedby: parentAriaDescribedby, invalid: parentInvalid, warning: parentWarning } = useFormFieldContext({});
  const contextValuesWithoutControlId = {
    ariaLabelledby: joinStrings(parentAriaLabelledby, slotIds.label) || void 0,
    ariaDescribedby: joinStrings(parentAriaDescribedby, ariaDescribedBy) || void 0,
    invalid: !!errorText || !!parentInvalid,
    warning: !!warningText && !errorText || !!parentWarning && !parentInvalid
  };
  const analyticsAttributes = {
    [DATA_ATTR_FIELD_LABEL]: slotIds.label ? getFieldSlotSeletor(slotIds.label) : void 0,
    [DATA_ATTR_FIELD_ERROR]: slotIds.error ? getFieldSlotSeletor(slotIds.error) : void 0
  };
  (0, import_react.useEffect)(() => {
    var _a2, _b, _c;
    if (funnelInteractionId && errorText && funnelState.current !== "complete") {
      const stepName = getTextFromSelector(stepNameSelector);
      const subStepName = getTextFromSelector(subStepNameSelector);
      errorCount.current++;
      const errorIsVisible = ((_c = (_b = (_a2 = __internalRootRef === null || __internalRootRef === void 0 ? void 0 : __internalRootRef.current) === null || _a2 === void 0 ? void 0 : _a2.getBoundingClientRect()) === null || _b === void 0 ? void 0 : _b.width) !== null && _c !== void 0 ? _c : 0) > 0;
      if (errorIsVisible) {
        FunnelMetrics.funnelSubStepError({
          funnelInteractionId,
          funnelIdentifier,
          subStepSelector,
          subStepName,
          subStepNameSelector,
          subStepIdentifier,
          stepNumber,
          stepName,
          stepNameSelector,
          stepIdentifier,
          subStepErrorContext,
          fieldErrorSelector: `${getFieldSlotSeletor(slotIds.error)} .${styles_css_default2.error__message}`,
          fieldLabelSelector: getFieldSlotSeletor(slotIds.label),
          subStepAllSelector: getSubStepAllSelector(),
          fieldIdentifier: __analyticsMetadata === null || __analyticsMetadata === void 0 ? void 0 : __analyticsMetadata.instanceIdentifier,
          fieldErrorContext: __analyticsMetadata === null || __analyticsMetadata === void 0 ? void 0 : __analyticsMetadata.errorContext
        });
      }
      return () => {
        errorCount.current--;
      };
    }
  }, [funnelInteractionId, errorText, submissionAttempt, errorCount]);
  return import_react.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default2.root), style: __style, ref: __internalRootRef }, analyticsAttributes, copyAnalyticsMetadataAttribute(rest)),
    import_react.default.createElement(
      "div",
      { className: clsx_m_default(styles_css_default2["label-wrapper"], __hideLabel && styles_css_default2["visually-hidden"]) },
      label && import_react.default.createElement("label", { className: clsx_m_default(styles_css_default2.label, styles_css_default.label), id: slotIds.label, htmlFor: generatedControlId }, label),
      import_react.default.createElement(InfoLinkLabelContext.Provider, { value: slotIds.label }, !__hideLabel && info && import_react.default.createElement("span", { className: styles_css_default2.info }, info))
    ),
    description && import_react.default.createElement("div", { className: styles_css_default2.description, id: slotIds.description }, description),
    import_react.default.createElement(
      "div",
      { className: clsx_m_default(styles_css_default2.controls, __hideLabel && styles_css_default2["label-hidden"]) },
      import_react.default.createElement(
        internal_default,
        { gridDefinition, disableGutters: __disableGutters },
        import_react.default.createElement(FormFieldContext.Provider, { value: Object.assign({ controlId: generatedControlId }, contextValuesWithoutControlId) }, children && import_react.default.createElement("div", { className: styles_css_default2.control }, children)),
        secondaryControl && import_react.default.createElement(
          FormFieldContext.Provider,
          { value: contextValuesWithoutControlId },
          import_react.default.createElement("div", { className: styles_css_default2["secondary-control"] }, secondaryControl)
        )
      )
    ),
    (constraintText || errorText || warningText) && import_react.default.createElement(
      "div",
      { className: styles_css_default2.hints },
      errorText && import_react.default.createElement(FormFieldError, { id: slotIds.error, errorIconAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.errorIconAriaLabel }, errorText),
      showWarning && import_react.default.createElement(FormFieldWarning, { id: slotIds.warning, warningIconAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.warningIconAriaLabel }, warningText),
      constraintText && import_react.default.createElement(ConstraintText, { id: slotIds.constraint, hasValidationText: !!errorText || !!warningText }, constraintText)
    )
  );
}

export {
  styles_css_default,
  InternalFormField
};
//# sourceMappingURL=chunk-LQIVWGCH.js.map
