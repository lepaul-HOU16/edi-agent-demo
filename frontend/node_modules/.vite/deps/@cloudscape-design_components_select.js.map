{
  "version": 3,
  "sources": ["../../../../node_modules/src/select/index.tsx"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getExternalProps } from '../internal/utils/external-props';\nimport { GeneratedAnalyticsMetadataSelectComponent } from './analytics-metadata/interfaces';\nimport { SelectProps } from './interfaces';\nimport InternalSelect from './internal';\n\nexport { SelectProps };\n\nimport analyticsSelectors from '../internal/components/button-trigger/analytics-metadata/styles.css.js';\n\nconst Select = React.forwardRef(\n  (\n    {\n      options = [],\n      filteringType = 'none',\n      statusType = 'finished',\n      triggerVariant = 'label',\n      ...restProps\n    }: SelectProps,\n    ref: React.Ref<SelectProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Select', {\n      props: {\n        autoFocus: restProps.autoFocus,\n        expandToViewport: restProps.expandToViewport,\n        filteringType,\n        triggerVariant,\n        virtualScroll: restProps.virtualScroll,\n        readOnly: restProps.readOnly,\n      },\n      metadata: {\n        hasInlineLabel: Boolean(restProps.inlineLabelText),\n        hasDisabledReasons: options.some(option => Boolean(option.disabledReason)),\n      },\n    });\n    const externalProps = getExternalProps(restProps);\n\n    const componentAnalyticsMetadata: GeneratedAnalyticsMetadataSelectComponent = {\n      name: 'awsui.Select',\n      label: `.${analyticsSelectors['button-trigger']}`,\n      properties: {\n        disabled: `${!!externalProps.disabled}`,\n      },\n    };\n\n    return (\n      <InternalSelect\n        options={options}\n        filteringType={filteringType}\n        statusType={statusType}\n        triggerVariant={triggerVariant}\n        {...externalProps}\n        {...baseComponentProps}\n        ref={ref}\n        {...getAnalyticsMetadataAttribute({ component: componentAnalyticsMetadata })}\n      />\n    );\n  }\n);\n\napplyDisplayName(Select, 'Select');\nexport default Select;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,mBAAkB;AAelB,IAAM,SAAS,aAAAA,QAAM,WACnB,CACE,IAOA,QACE;MARF,EACE,UAAU,CAAA,GACV,gBAAgB,QAChB,aAAa,YACb,iBAAiB,QAAO,IAAA,IACrB,YAAS,OAAA,IALd,CAAA,WAAA,iBAAA,cAAA,gBAAA,CAMC;AAGD,QAAM,qBAAqB,iBAAiB,UAAU;IACpD,OAAO;MACL,WAAW,UAAU;MACrB,kBAAkB,UAAU;MAC5B;MACA;MACA,eAAe,UAAU;MACzB,UAAU,UAAU;;IAEtB,UAAU;MACR,gBAAgB,QAAQ,UAAU,eAAe;MACjD,oBAAoB,QAAQ,KAAK,YAAU,QAAQ,OAAO,cAAc,CAAC;;GAE5E;AACD,QAAM,gBAAgB,iBAAiB,SAAS;AAEhD,QAAM,6BAAwE;IAC5E,MAAM;IACN,OAAO,IAAI,mBAAmB,gBAAgB,CAAC;IAC/C,YAAY;MACV,UAAU,GAAG,CAAC,CAAC,cAAc,QAAQ;;;AAIzC,SACE,aAAAA,QAAA,cAAC,kBAAc,OAAA,OAAA,EACb,SACA,eACA,YACA,eAA8B,GAC1B,eACA,oBAAkB,EACtB,IAAQ,GACJ,8BAA8B,EAAE,WAAW,2BAA0B,CAAE,CAAC,CAAA;AAGlF,CAAC;AAGH,iBAAiB,QAAQ,QAAQ;AACjC,IAAA,iBAAe;",
  "names": ["React"]
}
