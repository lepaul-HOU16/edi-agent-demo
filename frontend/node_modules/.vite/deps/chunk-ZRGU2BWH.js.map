{
  "version": 3,
  "sources": ["../../../../node_modules/src/internal/hooks/use-mobile/index.ts"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createSingletonState } from '@cloudscape-design/component-toolkit/internal';\n\nimport { getMatchingBreakpoint, mobileBreakpoint } from '../../breakpoints';\n\nexport const forceMobileModeSymbol = Symbol.for('awsui-force-mobile-mode');\n\nfunction getIsMobile() {\n  // allow overriding the mobile mode in tests\n  // any is needed because of this https://github.com/microsoft/TypeScript/issues/36813\n  const forceMobileMode = (globalThis as any)[forceMobileModeSymbol];\n  if (typeof forceMobileMode !== 'undefined') {\n    return forceMobileMode;\n  }\n  if (typeof window === 'undefined') {\n    // assume desktop in server-rendering\n    return false;\n  }\n\n  if (window.matchMedia) {\n    /**\n     * Some browsers include the scrollbar width in their media query calculations, but\n     * some browsers don't. Thus we can't use `window.innerWidth` or\n     * `document.documentElement.clientWidth` to get a very accurate result (since we\n     * wouldn't know which one of them to use).\n     * Instead, we use the media query here in JS too.\n     */\n    return window.matchMedia(`(max-width: ${mobileBreakpoint}px)`).matches;\n  }\n\n  return getMatchingBreakpoint(window.innerWidth, ['xs']) !== 'xs';\n}\n\nexport const useMobile = createSingletonState<boolean>({\n  initialState: () => getIsMobile(),\n  factory: handler => {\n    const listener = () => handler(getIsMobile());\n    window.addEventListener('resize', listener);\n    return () => {\n      window.removeEventListener('resize', listener);\n    };\n  },\n});\n"],
  "mappings": ";;;;;;;;;AAMO,IAAM,wBAAwB,OAAO,IAAI,yBAAyB;AAEzE,SAAS,cAAW;AAGlB,QAAM,kBAAmB,WAAmB,qBAAqB;AACjE,MAAI,OAAO,oBAAoB,aAAa;AAC1C,WAAO;;AAET,MAAI,OAAO,WAAW,aAAa;AAEjC,WAAO;;AAGT,MAAI,OAAO,YAAY;AAQrB,WAAO,OAAO,WAAW,eAAe,gBAAgB,KAAK,EAAE;;AAGjE,SAAO,sBAAsB,OAAO,YAAY,CAAC,IAAI,CAAC,MAAM;AAC9D;AAEO,IAAM,YAAY,qBAA8B;EACrD,cAAc,MAAM,YAAW;EAC/B,SAAS,aAAU;AACjB,UAAM,WAAW,MAAM,QAAQ,YAAW,CAAE;AAC5C,WAAO,iBAAiB,UAAU,QAAQ;AAC1C,WAAO,MAAK;AACV,aAAO,oBAAoB,UAAU,QAAQ;IAC/C;EACF;CACD;",
  "names": []
}
