const AWS = require('aws-sdk');

// Configure AWS SDK
AWS.config.update({ region: 'us-east-1' });
const lambda = new AWS.Lambda();

async function testComprehensiveShaleToolDirect() {
  console.log('🧪 Testing comprehensive shale analysis tool directly...');
  
  // Test the MCP tool call path by simulating what the agent does
  const testPayload = {
    arguments: {
      chatSessionId: "test-session-" + Date.now(),
      message: "Perform comprehensive shale analysis for field overview",
      foundationModelId: "us.anthropic.claude-3-5-sonnet-20241022-v2:0",
      userId: "test-user"
    },
    identity: {
      sub: "test-user",
      username: "test-user"
    }
  };

  console.log('📤 Invoking lambda with field overview shale analysis request...');
  console.log('🔍 This will test the MCP tool chain: enhancedStrandsAgent -> comprehensive_shale_analysis tool');
  
  try {
    const result = await lambda.invoke({
      FunctionName: 'amplify-digitalassistant--lightweightAgentlambda3D-YHBgjx1rRMbY',
      Payload: JSON.stringify(testPayload),
      InvocationType: 'RequestResponse'
    }).promise();

    const response = JSON.parse(result.Payload);
    console.log('\n📥 Lambda Response Status:', result.StatusCode);
    
    if (response.errorMessage) {
      console.error('❌ Lambda Error:', response.errorMessage);
      return;
    }

    console.log('\n🔍 DETAILED RESPONSE ANALYSIS:');
    console.log('Success:', response.success);
    console.log('Message:', response.message);
    console.log('Artifacts array type:', typeof response.artifacts);
    console.log('Artifacts is array:', Array.isArray(response.artifacts));
    console.log('Artifacts length:', response.artifacts?.length || 0);
    
    if (response.artifacts && Array.isArray(response.artifacts)) {
      if (response.artifacts.length > 0) {
        console.log('\n✅ ARTIFACTS FOUND!');
        response.artifacts.forEach((artifact, index) => {
          console.log(`\n📦 Artifact ${index + 1}:`);
          console.log('  Type:', typeof artifact);
          console.log('  Message Content Type:', artifact.messageContentType);
          console.log('  Analysis Type:', artifact.analysisType);
          console.log('  Has Executive Summary:', !!artifact.executiveSummary);
          console.log('  Has Results:', !!artifact.results);
          console.log('  All Keys:', Object.keys(artifact));
          
          if (artifact.executiveSummary) {
            console.log('  Executive Summary Title:', artifact.executiveSummary.title);
            console.log('  Key Findings Count:', artifact.executiveSummary.keyFindings?.length || 0);
          }
          
          if (artifact.results) {
            console.log('  Results Keys:', Object.keys(artifact.results));
          }
        });
        
        console.log('\n🎉 COMPREHENSIVE SHALE ANALYSIS TOOL IS WORKING CORRECTLY!');
        console.log('✅ Artifacts are being generated by the MCP tool');
        console.log('✅ The issue must be elsewhere in the chain');
        
      } else {
        console.log('\n❌ ARTIFACTS ARRAY IS EMPTY');
        console.log('This suggests the comprehensive_shale_analysis tool is not generating artifacts properly');
        console.log('Or the artifacts are being lost during processing');
      }
    } else {
      console.log('\n❌ NO ARTIFACTS ARRAY OR NOT AN ARRAY');
      console.log('Response structure:', {
        hasArtifacts: 'artifacts' in response,
        artifactsType: typeof response.artifacts,
        responseKeys: Object.keys(response)
      });
    }
    
    return response.artifacts && response.artifacts.length > 0;
    
  } catch (error) {
    console.error('❌ Test failed:', error.message);
    if (error.code === 'ResourceNotFoundException') {
      console.log('💡 Lambda function may not be deployed or name may be incorrect');
    }
    return false;
  }
}

testComprehensiveShaleToolDirect();
